1.C#进程间通信
    1-1.使用内存映射文件
    1-2.通过共享内存DLL共享内存
    1-3.使用SendMessage向另一进程发送WM_COPYDATA消息.
    1-4.使用微软消息队列实现C#进程间通信
    1-5.在.NET中使用命名管道完成进程间通信
2.线程同步  volatile，lock，System.Threading.Interlocked，Monitor，Mutex，ReaderWriterLock，SynchronizationAttribute，MethodImplAttribute，Semaphore(信号量),同步事件和等待句柄
AutoResetEvent和 ManualResetEvent。
    什么时候需要线程同步
3.临界区和互斥量
4.生产者消费者
生产者消费者问题
    这是一个非常经典的多线程题目，题目大意如下：有一个生产者在生产产品，这些产品将提供给若干个消费者去消费，为了使生产者和消费者能并发执行，在两者之间设置一个有多个缓冲区的缓冲池，生产者将它生产的产品放入一个缓冲区中，消费者可以从缓冲区中取走产品进行消费，所有生产者和消费者都是异步方式运行的，但它们必须保持同步，即不允许消费者到一个空的缓冲区中取产品，也不允许生产者向一个已经装满产品且尚未被取走的缓冲区中投放产品。
5.练习
5-1/编写一个程序，开启3个线程，这3个线程的ID分别为A、B、C，每个线程将自己的ID在屏幕上打印10遍，要求输出结果必须按ABC的顺序显示；如：ABCABC….依次递推。
    思路：用信号量进行各个子线程之间的互斥，创建3个信号量A、B、C。初始时A的资源数为1，B、C的资源数为0，访问A之后，将B的资源数加1，访问B之后将C的资源数加1，
    访问C之后将A的资源数加1。创建3个子线程顺序访问资源A、B、C。
5-2.以下多线程对int型变量x的操作，哪几个不需要进行同步： 
    A. x=y;      B. x++;    C. ++x;    D. x=1;
5-3.子线程循环 10 次，接着主线程循环 100 次，接着又回到子线程循环 10 次，接着再回到主线程又循环 100 次，如此循环50次，试写出代码。
5-4.有四个线程1、2、3、4。线程1的功能就是输出1，线程2的功能就是输出2，以此类推.........现在有四个文件ABCD。初始都为空。现要让四个文件呈如下格式：
    A：1 2 3 4 1 2....
    B：2 3 4 1 2 3....
    C：3 4 1 2 3 4....
    D：4 1 2 3 4 1....
5-5.
    读者写者问题
    这也是一个非常经典的多线程题目，题目大意如下：有一个写者很多读者，多个读者可以同时读文件，但写者在写文件时不允许有读者在读文件，同样有读者读时写者也不能写。
6.http://blog.csdn.net/morewindows/article/details/7392749